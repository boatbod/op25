{"version":3,"sources":["redux/app/hooks.ts","redux/slices/interface/interfaceSlice.ts","redux/slices/preferences/preferencesSlice.ts","components/MenuDrawer.tsx","components/AppBarWithToolbar.tsx","components/PreferencesDrawer.tsx","components/TopMenuBarAndDrawers.tsx","utils/axios.ts","lib/op25/index.ts","redux/slices/op25/op25Slice.ts","components/MainHUD.tsx","App.tsx","redux/app/store.ts","Theme.tsx","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","interfaceSlice","createSlice","name","initialState","isMenuDrawerOpen","isMobileMenuDrawerOpen","isPreferencesDrawerOpen","reducers","toggleMenuDrawerOpen","state","setMenuDrawerOpen","action","payload","toggleMobileMenuDrawerOpen","setMobileMenuDrawerOpen","togglePreferencesDrawerOpen","setPreferencesDrawerOpen","actions","interface","isPreferencesOpen","preferencesSlice","darkmode","toogleDarkMode","setDarkMode","selectIsDarkMode","preferences","useStyles","makeStyles","theme","createStyles","drawer","breakpoints","up","width","flexShrink","drawerPaper","toolbar","mixins","MenuDrawerContent","isDarkMode","AppBar","position","color","Toolbar","Typography","variant","noWrap","Divider","List","ListItem","button","selected","ListItemIcon","Home","ListItemText","PieChart","InfoRounded","container","undefined","globalThis","document","body","MenuDrawer","dispatch","isOpen","mobileOpen","classes","useTheme","className","Hidden","smUp","implementation","SwipeableDrawer","anchor","direction","open","onOpen","onClose","paper","ModalProps","keepMounted","xsDown","Drawer","grow","flexGrow","appBar","props","marginLeft","menuButton","marginRight","spacing","mobileMenuButton","content","padding","AppBarWithToolbar","IconButton","edge","onClick","Menu","Tooltip","title","Settings","gridSpace","paddingLeft","preferencesHeader","palette","common","white","blue","PreferencesDrawer","Grid","item","xs","justifyContent","Close","FormGroup","FormControlLabel","control","Switch","checked","onChange","e","target","label","root","display","TopMenuBarAndDrawers","Axios","axios","create","baseURL","method","headers","timeout","withCredentials","frequencyToString","frequency","toFixed","channel_update","d","channel_list","length","c_id","channel_index","channel_system","channel_name","channel_frequency","channel_ppm","current_talkgroupId","channel_tag","channel_sourceAddress","channel_sourceTag","channel_streamURL","stepSizeSmall","stepSizeLarge","send_queue","sendQueue","createAsyncThunk","_","a","getState","op25","queue","emptySendQueue","post","response","status","console","log","toString","statusText","data","addToSendQueue","send_command","unshiftOnSendQueue","pushToSendQueue","op25Slice","push","unshift","extraReducers","builder","addCase","fulfilled","i","json_type","err","selectAllState","minWidth","currentchannel","marginBottom","grid","height","gridRoot","fontSize","border","rowRoot","cellRoot","paddingRight","paddingBottom","flexWrap","actionsDiv","down","marginTop","actionbuttons","MainHUD","columns","field","hide","sortable","align","renderHeader","renderCell","params","getValue","id","enterDelay","placement","rows","stateName","stateValue","description","Card","CardContent","component","row","cell","headerHeight","isRowSelectable","hideFooter","CardActions","Button","size","drawerWidth","tempDebugContent","App","ppm","useEffect","command","arg1","arg2","updateTimer","setInterval","Number","clearInterval","store","configureStore","reducer","interfaceReducer","op25Reducer","preferencesReducer","useDarkMode","createTheme","type","secondary","main","Theme","children","ThemeProvider","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.063109bf.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { InterfaceState } from \"../../../types/InterfaceState\";\n\nconst initialState: InterfaceState = {\n  isMenuDrawerOpen: true,\n  isMobileMenuDrawerOpen: false,\n  isPreferencesDrawerOpen: false,\n};\n\nexport const interfaceSlice = createSlice({\n  name: \"interface\",\n  initialState,\n  reducers: {\n    toggleMenuDrawerOpen: (state) => {\n      state.isMenuDrawerOpen = !state.isMenuDrawerOpen;\n    },\n    setMenuDrawerOpen: (state, action: PayloadAction<boolean>) => {\n      state.isMenuDrawerOpen = action.payload;\n    },\n    toggleMobileMenuDrawerOpen: (state) => {\n      state.isMobileMenuDrawerOpen = !state.isMobileMenuDrawerOpen;\n    },\n    setMobileMenuDrawerOpen: (state, action: PayloadAction<boolean>) => {\n      state.isMobileMenuDrawerOpen = action.payload;\n    },\n    togglePreferencesDrawerOpen: (state) => {\n      debugger;\n      state.isPreferencesDrawerOpen = !state.isPreferencesDrawerOpen;\n    },\n    setPreferencesDrawerOpen: (state, action: PayloadAction<boolean>) => {\n      state.isPreferencesDrawerOpen = action.payload;\n    },\n  },\n});\n\nexport const {\n  toggleMenuDrawerOpen,\n  setMenuDrawerOpen,\n  toggleMobileMenuDrawerOpen,\n  setMobileMenuDrawerOpen,\n  togglePreferencesDrawerOpen,\n  setPreferencesDrawerOpen,\n} = interfaceSlice.actions;\n\nexport const isMenuDrawerOpen = (state: RootState): boolean =>\n  state.interface.isMenuDrawerOpen;\n\nexport const isMobileMenuDrawerOpen = (state: RootState): boolean =>\n  state.interface.isMobileMenuDrawerOpen;\n\nexport const isPreferencesOpen = (state: RootState): boolean =>\n  state.interface.isPreferencesDrawerOpen;\n\nexport default interfaceSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { PreferencesState } from \"../../../types/PreferencesState\";\n\nconst initialState: PreferencesState = {\n  darkmode: true,\n};\n\nexport const preferencesSlice = createSlice({\n  name: \"interface\",\n  initialState,\n  reducers: {\n    toogleDarkMode: (state) => {\n      state.darkmode = !state.darkmode;\n    },\n    setDarkMode: (state, action: PayloadAction<boolean>) => {\n      state.darkmode = action.payload;\n    },\n  },\n});\n\nexport const { toogleDarkMode, setDarkMode } = preferencesSlice.actions;\n\nexport const selectIsDarkMode = (state: RootState): boolean =>\n  state.preferences.darkmode;\n\nexport default preferencesSlice.reducer;\n","import { useAppDispatch, useAppSelector } from \"../redux/app/hooks\";\nimport {\n  isMenuDrawerOpen,\n  isMobileMenuDrawerOpen,\n  setMenuDrawerOpen,\n  setMobileMenuDrawerOpen,\n} from \"../redux/slices/interface/interfaceSlice\";\n\nimport {\n  AppBar,\n  createStyles,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  SwipeableDrawer,\n  Theme,\n  Toolbar,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport {\n  Home as HomeIcon,\n  PieChart as PieChartIcon,\n  InfoRounded as InfoRoundedIcon,\n} from \"@material-ui/icons\";\nimport { selectIsDarkMode } from \"../redux/slices/preferences/preferencesSlice\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawer: {\n      [theme.breakpoints.up(\"sm\")]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n  })\n);\n\nconst MenuDrawerContent = () => {\n  const isDarkMode = useAppSelector(selectIsDarkMode);\n\n  return (\n    <div>\n      <AppBar\n        position=\"relative\"\n        color={isDarkMode ? \"transparent\" : \"primary\"}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            OP25 (Boatbod)\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Divider />\n      <List>\n        <ListItem button selected>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>Receiver</ListItemText>\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <PieChartIcon />\n          </ListItemIcon>\n          <ListItemText>Plot</ListItemText>\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button>\n          <ListItemIcon>\n            <InfoRoundedIcon />\n          </ListItemIcon>\n          <ListItemText>About</ListItemText>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nconst container =\n  globalThis !== undefined ? () => globalThis.document.body : undefined;\n\nconst MenuDrawer = () => {\n  const dispatch = useAppDispatch();\n  const isOpen = useAppSelector(isMenuDrawerOpen);\n  const mobileOpen = useAppSelector(isMobileMenuDrawerOpen);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <nav className={classes.drawer}>\n      <Hidden smUp implementation=\"css\">\n        <SwipeableDrawer\n          container={container}\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onOpen={() => {\n            dispatch(setMobileMenuDrawerOpen(true));\n          }}\n          onClose={() => {\n            dispatch(setMobileMenuDrawerOpen(false));\n          }}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          <MenuDrawerContent />\n        </SwipeableDrawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"persistent\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={isOpen}\n          onClose={() => {\n            dispatch(setMenuDrawerOpen(false));\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          <MenuDrawerContent />\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n};\n\nexport default MenuDrawer;\n","import { useAppDispatch, useAppSelector } from \"../redux/app/hooks\";\nimport {\n  isMenuDrawerOpen,\n  toggleMenuDrawerOpen,\n  toggleMobileMenuDrawerOpen,\n  togglePreferencesDrawerOpen,\n} from \"../redux/slices/interface/interfaceSlice\";\n\nimport {\n  AppBar,\n  createStyles,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Theme,\n  Toolbar,\n  Tooltip,\n} from \"@material-ui/core\";\n\nimport { Menu as MenuIcon, Settings as SettingsIcon } from \"@material-ui/icons\";\n\ninterface useStylesProps {\n  isOpen: boolean;\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    appBar: {\n      [theme.breakpoints.up(\"sm\")]: {\n        width: (props: useStylesProps) =>\n          props.isOpen && `calc(100% - ${drawerWidth}px)`,\n        marginLeft: (props: useStylesProps) => props.isOpen && drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    mobileMenuButton: {\n      marginRight: theme.spacing(2),\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nconst AppBarWithToolbar = () => {\n  const dispatch = useAppDispatch();\n  const isOpen = useAppSelector(isMenuDrawerOpen);\n  const classes = useStyles({ isOpen });\n\n  return (\n    <AppBar position=\"sticky\" className={classes.appBar}>\n      <Toolbar>\n        <Hidden smUp>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={() => {\n              dispatch(toggleMobileMenuDrawerOpen());\n            }}\n            className={classes.mobileMenuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden xsDown>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={() => {\n              dispatch(toggleMenuDrawerOpen());\n            }}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n        {/* <MenuItem button>Skip</MenuItem>\n        <MenuItem button>Hold</MenuItem>\n        <MenuItem button>GoTo</MenuItem>\n        <MenuItem button>LockOut</MenuItem> */}\n        <div className={classes.grow} />\n        <Tooltip title=\"Preferences\" aria-label=\"preferences\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"preferences\"\n            onClick={() => {\n              dispatch(togglePreferencesDrawerOpen());\n            }}\n          >\n            <SettingsIcon />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AppBarWithToolbar;\n","import { useAppDispatch, useAppSelector } from \"../redux/app/hooks\";\nimport {\n  isPreferencesOpen,\n  setPreferencesDrawerOpen,\n} from \"../redux/slices/interface/interfaceSlice\";\nimport {\n  selectIsDarkMode,\n  setDarkMode,\n} from \"../redux/slices/preferences/preferencesSlice\";\n\nimport {\n  AppBar,\n  createStyles,\n  Divider,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  IconButton,\n  makeStyles,\n  SwipeableDrawer,\n  Switch,\n  Theme,\n  Toolbar,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\n\nimport { Close as CloseIcon } from \"@material-ui/icons\";\n\nimport { blue } from \"@material-ui/core/colors\";\n\nconst drawerWidth = 260;\n\ninterface StylesProps {\n  isDarkMode: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      [theme.breakpoints.up(\"sm\")]: {\n        width: `${drawerWidth}px`,\n      },\n    },\n    drawer: {\n      [theme.breakpoints.up(\"sm\")]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    gridSpace: {\n      paddingLeft: theme.spacing(2),\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    preferencesHeader: {\n      color: (props: StylesProps) =>\n        props.isDarkMode ? theme.palette.common.white : blue[800],\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n  })\n);\n\nconst container =\n  globalThis !== undefined ? () => globalThis.document.body : undefined;\n\nconst PreferencesDrawer = () => {\n  const dispatch = useAppDispatch();\n  const isOpen = useAppSelector(isPreferencesOpen);\n  const isDarkMode = useAppSelector(selectIsDarkMode);\n  const classes = useStyles({ isDarkMode });\n  const theme = useTheme();\n\n  return (\n    <nav className={classes.drawer}>\n      <SwipeableDrawer\n        container={container}\n        variant=\"temporary\"\n        anchor={theme.direction === \"rtl\" ? \"left\" : \"right\"}\n        open={isOpen}\n        onClose={() => {\n          dispatch(setPreferencesDrawerOpen(false));\n        }}\n        onOpen={() => {\n          dispatch(setPreferencesDrawerOpen(true));\n        }}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        ModalProps={{\n          keepMounted: true, // Better open performance on mobile.\n        }}\n      >\n        <AppBar\n          position=\"relative\"\n          className={classes.appBar}\n          color={isDarkMode ? \"transparent\" : \"primary\"}\n        >\n          <Toolbar></Toolbar>\n        </AppBar>\n        <Divider />\n        <Grid className={classes.gridSpace} container spacing={0}>\n          <Grid item xs={12}>\n            <Grid container justifyContent=\"flex-end\">\n              <IconButton\n                onClick={() => {\n                  dispatch(setPreferencesDrawerOpen(false));\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography className={classes.preferencesHeader} variant=\"h6\">\n              Theme\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={isDarkMode}\n                    onChange={(e) => {\n                      dispatch(setDarkMode(e.target.checked));\n                    }}\n                    name=\"darkModeEnabled\"\n                  />\n                }\n                label=\"Dark Mode\"\n              />\n            </FormGroup>\n          </Grid>\n        </Grid>\n      </SwipeableDrawer>\n    </nav>\n  );\n};\n\nexport default PreferencesDrawer;\n","import MenuDrawer from \"./MenuDrawer\";\nimport AppBarWithToolbar from \"./AppBarWithToolbar\";\n\nimport { createStyles, makeStyles } from \"@material-ui/core\";\nimport PreferencesDrawer from \"./PreferencesDrawer\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n  })\n);\n\nconst TopMenuBarAndDrawers = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBarWithToolbar />\n      <MenuDrawer />\n      <PreferencesDrawer />\n    </div>\n  );\n};\n\nexport default TopMenuBarAndDrawers;\n","import axios from \"axios\";\n\nconst Axios = () => {\n  return axios.create({\n    baseURL: \"http://10.194.1.103:8080/\",\n    method: \"post\",\n    headers: { \"Content-type\": \"application/json\" },\n    timeout: 5000,\n    withCredentials: false,\n  });\n};\n\nexport default Axios;\n","// function term_config(d: any) {\n// TODO: Remove ANY Type\n//   var lg_step = 1200;\n//   var sm_step = 100;\n//   var updated = 0;\n//   if (\n//     d[\"tuning_step_large\"] != undefined &&\n//     d[\"tuning_step_large\"] != lg_step\n//   ) {\n//     lg_step = d[\"tuning_step_large\"];\n//     updated++;\n//   }\n//   if (\n//     d[\"tuning_step_small\"] != undefined &&\n//     d[\"tuning_step_small\"] != sm_step\n//   ) {\n//     sm_step = d[\"tuning_step_small\"];\n//     updated++;\n//   }\n//   if (updated) {\n//     set_tuning_step_sizes(lg_step, sm_step);\n//   }\n// }\n// function set_tuning_step_sizes(lg_step = 1200, sm_step = 100) {\n//   var title_str = \"Adjust tune \";\n//   var bn_t1_U = document.getElementById(\"t1_U\");\n//   var bn_t2_U = document.getElementById(\"t2_U\");\n//   var bn_t1_D = document.getElementById(\"t1_D\");\n//   var bn_t2_D = document.getElementById(\"t2_D\");\n//   var bn_t1_u = document.getElementById(\"t1_u\");\n//   var bn_t2_u = document.getElementById(\"t2_u\");\n//   var bn_t1_d = document.getElementById(\"t1_d\");\n//   var bn_t2_d = document.getElementById(\"t2_d\");\n//   if (bn_t1_U != null && bn_t2_U != null) {\n//     bn_t1_U.setAttribute(\"title\", title_str + \"+\" + lg_step);\n//     bn_t2_U.setAttribute(\"title\", title_str + \"+\" + lg_step);\n//     bn_t1_U.setAttribute(\n//       \"onclick\",\n//       \"javascript:f_tune_button(\" + lg_step + \");\"\n//     );\n//     bn_t2_U.setAttribute(\n//       \"onclick\",\n//       \"javascript:f_tune_button(\" + lg_step + \");\"\n//     );\n//   }\n//   if (bn_t1_D != null && bn_t2_D != null) {\n//     bn_t1_D.setAttribute(\"title\", title_str + \"-\" + lg_step);\n//     bn_t2_D.setAttribute(\"title\", title_str + \"-\" + lg_step);\n//     bn_t1_D.setAttribute(\n//       \"onclick\",\n//       \"javascript:f_tune_button(-\" + lg_step + \");\"\n//     );\n//     bn_t2_D.setAttribute(\n//       \"onclick\",\n//       \"javascript:f_tune_button(-\" + lg_step + \");\"\n//     );\n//   }\n//   if (bn_t1_u != null && bn_t2_u != null) {\n//     bn_t1_u.setAttribute(\"title\", title_str + \"+\" + sm_step);\n//     bn_t2_u.setAttribute(\"title\", title_str + \"+\" + sm_step);\n//     bn_t1_u.setAttribute(\n//       \"onclick\",\n//       \"javascript:f_tune_button(\" + sm_step + \");\"\n//     );\n//     bn_t2_u.setAttribute(\n//       \"onclick\",\n//       \"javascript:f_tune_button(\" + sm_step + \");\"\n//     );\n//   }\n//   if (bn_t1_d != null && bn_t2_d != null) {\n//     bn_t1_d.setAttribute(\"title\", title_str + \"-\" + sm_step);\n//     bn_t2_d.setAttribute(\"title\", title_str + \"-\" + sm_step);\n//     bn_t1_d.setAttribute(\n//       \"onclick\",\n//       \"javascript:f_tune_button(-\" + sm_step + \");\"\n//     );\n//     bn_t2_d.setAttribute(\n//       \"onclick\",\n//       \"javascript:f_tune_button(-\" + sm_step + \");\"\n//     );\n//   }\n// }\n\nimport { Draft } from \"@reduxjs/toolkit\";\nimport { OP25State } from \"types/OP25State\";\n\nexport const frequencyToString = (frequency: number) => {\n  return (frequency / 1000000.0).toFixed(6);\n};\n\nexport const ppmToString = (ppm: number) => {\n  return ppm.toFixed(3);\n};\n\nexport const channel_update = (d: any, state: Draft<OP25State>) => {\n  //   var s2_c = document.getElementById(\"s2_ch_lbl\");\n  //   var s2_d = document.getElementById(\"s2_ch_txt\");\n  //   var s2_e = document.getElementById(\"s2_ch_dn\");\n  //   var s2_f = document.getElementById(\"s2_ch_dmp\");\n  //   var s2_g = document.getElementById(\"s2_ch_up\");\n\n  if (d[\"channels\"] !== undefined) {\n    state.channel_list = d[\"channels\"];\n\n    if (state.channel_list.length > 0) {\n      const c_id = state.channel_list[state.channel_index];\n      state.channel_system = d[c_id][\"system\"];\n      state.channel_name = \"[\" + c_id + \"]\";\n\n      if (d[c_id][\"name\"] !== undefined && d[c_id][\"name\"] !== \"\") {\n        state.channel_name += \" \" + d[c_id][\"name\"];\n      } else {\n        state.channel_name += \" \" + state.channel_system;\n      }\n\n      state.channel_frequency = d[c_id][\"freq\"];\n      state.channel_ppm = d[c_id][\"ppm\"];\n      state.current_talkgroupId = d[c_id][\"tgid\"];\n      state.channel_tag = d[c_id][\"tag\"];\n      state.channel_sourceAddress = d[c_id][\"srcaddr\"];\n      state.channel_sourceTag = d[c_id][\"srctag\"];\n      state.channel_streamURL = d[c_id][\"stream_url\"];\n    } else {\n      state.channel_name = \"\";\n      state.channel_frequency = undefined;\n      state.channel_system = \"\";\n      state.current_talkgroupId = 0;\n      state.channel_tag = \"\";\n      state.channel_sourceAddress = 0;\n      state.channel_sourceTag = \"\";\n      state.channel_streamURL = \"\";\n    }\n    //channel_status();\n  }\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"redux/app/store\";\nimport { OP25QueueItem } from \"types/OP25\";\nimport { OP25State } from \"types/OP25State\";\nimport axios from \"utils/axios\";\nimport { channel_update } from \"lib/op25\";\n\nconst SEND_QLIMIT = 5;\n\nconst initialState: OP25State = {\n  current_talkgroupId: undefined,\n  channel_system: undefined,\n  channel_name: undefined,\n  channel_frequency: undefined,\n  channel_ppm: undefined,\n  channel_tag: undefined,\n  channel_sourceAddress: undefined,\n  channel_sourceTag: undefined,\n  channel_streamURL: undefined,\n  stepSizeSmall: 100,\n  stepSizeLarge: 1200,\n  channel_list: [],\n  channel_index: 0,\n  send_queue: [],\n};\n\nexport const sendQueue = createAsyncThunk(\n  \"op25/sendQueue\",\n  async (_, { getState, dispatch }) => {\n    const state = (getState() as any).op25 as OP25State;\n\n    try {\n      const queue: OP25QueueItem[] = [...state.send_queue];\n      dispatch(emptySendQueue());\n      const response = await axios().post(\"/\", queue);\n      if (response.status !== 200) {\n        // TODO: Show the user SOMETHING!\n        console.log(\n          `Error ${response.status.toString(10)}: ${response.statusText}`\n        );\n        return;\n      }\n      return response.data;\n    } catch (err) {\n      // TODO: Show the user SOMETHING!\n      console.log(\"Axios request error:\", err);\n    }\n  }\n);\n\nexport const addToSendQueue = createAsyncThunk(\n  \"op25/addToSendQueue\",\n  async (send_command: OP25QueueItem, { getState, dispatch }) => {\n    const state = (getState() as any).op25 as OP25State;\n\n    if (state.send_queue.length >= SEND_QLIMIT) {\n      dispatch(unshiftOnSendQueue(undefined));\n    }\n\n    dispatch(pushToSendQueue(send_command));\n  }\n);\n\nexport const op25Slice = createSlice({\n  name: \"op25\",\n  initialState,\n  reducers: {\n    pushToSendQueue: (state, action: PayloadAction<OP25QueueItem>) => {\n      state.send_queue.push(action.payload);\n    },\n    unshiftOnSendQueue: (state, action: PayloadAction<any | undefined>) => {\n      state.send_queue.unshift(action.payload);\n    },\n    emptySendQueue: (state) => {\n      state.send_queue = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(sendQueue.fulfilled, (state, action: any) => {\n        const data = action.payload;\n        try {\n          for (var i = 0; i < data.length; i++) {\n            const d = data[i];\n            if (!d.json_type) {\n              console.log(\"no json_type\", d);\n              continue;\n            }\n\n            switch (d.json_type) {\n              case \"trunk_update\":\n                //console.log(\"type hit\", d.json_type);\n                // trunk_update(d);\n                continue;\n              case \"change_freq\":\n                //console.log(\"type hit\", d.json_type);\n                // change_freq(d);\n                continue;\n              case \"channel_update\":\n                // console.log(\"channel_update\", d);\n                channel_update(d, state);\n                continue;\n              case \"rx_update\":\n                //console.log(\"rx_update\", d);\n                // rx_update(d);\n                continue;\n              case \"terminal_config\":\n                console.log(\"terminal_config\", d);\n                //term_config(d);\n                continue;\n              default:\n                console.log(\"unknown type\", d.json_type);\n                continue;\n            }\n          }\n        } catch (err) {\n          // TODO: Show the user SOMETHING!\n          console.log(\"Error parsing response: \", err);\n        }\n      })\n      .addCase(addToSendQueue.fulfilled, (_, action) => {});\n  },\n});\n\nexport const { pushToSendQueue, unshiftOnSendQueue, emptySendQueue } =\n  op25Slice.actions;\n\nexport const selectAllState = (state: RootState): OP25State => state.op25;\n\nexport const selectCurrentTalkgroupId = (\n  state: RootState\n): number | undefined => state.op25.current_talkgroupId;\n\nexport default op25Slice.reducer;\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { useAppSelector } from \"redux/app/hooks\";\nimport { selectAllState } from \"redux/slices/op25/op25Slice\";\nimport { frequencyToString } from \"lib/op25\";\nimport { DataGrid, GridColDef, GridRenderCellParams } from \"@mui/x-data-grid\";\n\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Theme,\n  Typography,\n  IconButton,\n  Tooltip,\n} from \"@material-ui/core\";\n\nimport {\n  FiChevronsLeft as DoubleArrowsLeftIcon,\n  FiChevronLeft as ArrowLeftIcon,\n  FiChevronsRight as DoubleArrowsRightIcon,\n  FiChevronRight as ArrowRightIcon,\n} from \"react-icons/fi\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minWidth: 275,\n    },\n    currentchannel: {\n      marginBottom: 20,\n    },\n    grid: {\n      height: 175,\n    },\n    gridRoot: {\n      fontSize: 12,\n      border: \"0\",\n    },\n    rowRoot: {\n      border: \"0\",\n    },\n    cellRoot: {\n      paddingLeft: 5,\n      paddingRight: 5,\n      border: \"0\",\n    },\n    actions: {\n      paddingBottom: 20,\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n    },\n    actionsDiv: {\n      display: \"flex\",\n      [theme.breakpoints.down(\"sm\")]: {\n        marginTop: 30,\n      },\n    },\n    actionbuttons: {\n      paddingLeft: 15,\n      paddingRight: 15,\n    },\n  })\n);\n\nconst MainHUD = () => {\n  const classes = useStyles();\n  const state = useAppSelector(selectAllState);\n\n  const columns: GridColDef[] = [\n    { field: \"id\", hide: true, sortable: false },\n    {\n      field: \"stateName\",\n      align: \"right\",\n      sortable: false,\n      minWidth: 110,\n      renderHeader: (_) => <></>,\n      renderCell: (params: GridRenderCellParams) =>\n        params.getValue(params.id, \"description\") ? (\n          <Tooltip\n            title={`${\n              params.getValue(params.id, \"description\") &&\n              params.getValue(params.id, \"description\")?.toString()\n            }`}\n            enterDelay={500}\n            placement=\"right\"\n          >\n            <span>{params.getValue(params.id, \"stateName\")}</span>\n          </Tooltip>\n        ) : (\n          <span>{params.getValue(params.id, \"stateName\")}</span>\n        ),\n    },\n    {\n      field: \"stateValue\",\n      align: \"left\",\n      sortable: false,\n      renderHeader: (_) => <></>,\n    },\n    { field: \"description\", hide: true, sortable: false },\n  ];\n\n  const rows = [\n    {\n      id: 1,\n      stateName: \"Group Address:\",\n      stateValue: state.current_talkgroupId ? state.current_talkgroupId : \"-\",\n      description:\n        \"Also known as the Talkgroup ID, this is the unique ID assigned to a group.\",\n    },\n    {\n      id: 2,\n      stateName: \"Source Address:\",\n      stateValue: state.current_talkgroupId ? state.channel_sourceAddress : \"-\",\n      description: \"ID of the person talking (Radio ID / Unit ID)\",\n    },\n    {\n      id: 3,\n      stateName: \"Frequency:\",\n      stateValue:\n        state.channel_frequency && frequencyToString(state.channel_frequency),\n    },\n  ];\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography\n          className={classes.currentchannel}\n          variant=\"h5\"\n          component=\"h2\"\n        >\n          {state.channel_tag ? state.channel_tag : state.current_talkgroupId}\n        </Typography>\n        <div className={classes.grid}>\n          <DataGrid\n            classes={{\n              root: classes.gridRoot,\n              row: classes.rowRoot,\n              cell: classes.cellRoot,\n            }}\n            rows={rows}\n            columns={columns}\n            headerHeight={0}\n            isRowSelectable={(_) => false}\n            hideFooter\n          />\n        </div>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button size=\"small\">Skip</Button>\n        <Button size=\"small\">Hold</Button>\n        <Button size=\"small\">GOTO</Button>\n        <Tooltip title=\"Blacklist\" placement=\"top\" enterDelay={500}>\n          <Button size=\"small\">B/List</Button>\n        </Tooltip>\n        <Tooltip title=\"Whitelist\" placement=\"top\" enterDelay={500}>\n          <Button size=\"small\">W/List</Button>\n        </Tooltip>\n        <Tooltip title=\"Log Verbosity\" placement=\"top\" enterDelay={500}>\n          <Button size=\"small\">Log/V</Button>\n        </Tooltip>\n        <div className={classes.actionsDiv}>\n          <Tooltip title={`-${state.stepSizeLarge}`} placement=\"top\">\n            <IconButton size=\"small\" className={classes.actionbuttons}>\n              <DoubleArrowsLeftIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={`-${state.stepSizeSmall}`} placement=\"top\">\n            <IconButton size=\"small\" className={classes.actionbuttons}>\n              <ArrowLeftIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={`+${state.stepSizeSmall}`} placement=\"top\">\n            <IconButton size=\"small\" className={classes.actionbuttons}>\n              <ArrowRightIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={`+${state.stepSizeLarge}`} placement=\"top\">\n            <IconButton size=\"small\" className={classes.actionbuttons}>\n              <DoubleArrowsRightIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default MainHUD;\n","import { useEffect } from \"react\";\nimport TopMenuBarAndDrawers from \"./components/TopMenuBarAndDrawers\";\nimport { useAppDispatch, useAppSelector } from \"redux/app/hooks\";\nimport {\n  selectAllState,\n  addToSendQueue,\n  sendQueue,\n} from \"redux/slices/op25/op25Slice\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport { isMenuDrawerOpen } from \"redux/slices/interface/interfaceSlice\";\nimport { frequencyToString, ppmToString } from \"lib/op25\";\nimport MainHUD from \"components/MainHUD\";\ninterface useStylesProps {\n  isOpen: boolean;\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      marginTop: 20,\n      [theme.breakpoints.down(\"xs\")]: {\n        marginLeft: 20,\n        marginRight: 20,\n      },\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: (props: useStylesProps) => props.isOpen && drawerWidth + 25,\n        marginRight: 25,\n      },\n    },\n    tempDebugContent: {\n      marginTop: 50,\n    },\n  })\n);\n\nconst App = () => {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(selectAllState);\n  const isOpen = useAppSelector(isMenuDrawerOpen);\n  const classes = useStyles({ isOpen });\n\n  useEffect(() => {\n    dispatch(addToSendQueue({ command: \"get_config\", arg1: 0, arg2: 0 }));\n    const updateTimer = setInterval(async () => {\n      if (state.channel_list.length === 0) {\n        await dispatch(addToSendQueue({ command: \"update\", arg1: 0, arg2: 0 }));\n        dispatch(sendQueue());\n      } else {\n        await dispatch(\n          addToSendQueue({\n            command: \"update\",\n            arg1: 0,\n            arg2: Number(state.channel_list[state.channel_index]),\n          })\n        );\n        dispatch(sendQueue());\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(updateTimer);\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <TopMenuBarAndDrawers />\n      <div className={classes.content}>\n        <MainHUD />\n        <div className={classes.tempDebugContent}>\n          channel_frequency:{\" \"}\n          {state.channel_frequency &&\n            frequencyToString(state.channel_frequency)}\n        </div>\n        <div>channel_index: {state.channel_index}</div>\n        <div>channel_list: {state.channel_list}</div>\n        <div>channel_name: {state.channel_name}</div>\n        <div>\n          channel_ppm: {state.channel_ppm && ppmToString(state.channel_ppm)}\n        </div>\n        <div>channel_sourceAddress: {state.channel_sourceAddress}</div>\n        <div>channel_sourceTag: {state.channel_sourceTag}</div>\n        <div>channel_streamURL: {state.channel_streamURL}</div>\n        <div>channel_system: {state.channel_system}</div>\n        <div>channel_tag: {state.channel_tag}</div>\n        <div>current_talkgroupId: {state.current_talkgroupId}</div>\n        <div>stepSizeLarge: {state.stepSizeLarge}</div>\n        <div>stepSizeSmall: {state.stepSizeSmall}</div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport interfaceReducer from \"../slices/interface/interfaceSlice\";\nimport op25Reducer from \"../slices/op25/op25Slice\";\nimport preferencesReducer from \"../slices/preferences/preferencesSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    interface: interfaceReducer,\n    op25: op25Reducer,\n    preferences: preferencesReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { useAppSelector } from \"./redux/app/hooks\";\nimport { selectIsDarkMode } from \"./redux/slices/preferences/preferencesSlice\";\n\nimport { blue } from \"@material-ui/core/colors\";\n\ninterface ThemeFuncProps {\n  useDarkMode?: boolean;\n}\n\ninterface ThemeComponentProps {\n  children: any;\n}\n\nconst theme = ({ useDarkMode }: ThemeFuncProps = {}) =>\n  createTheme({\n    palette: {\n      type: useDarkMode === false ? \"light\" : \"dark\",\n      secondary: {\n        main: blue[500],\n      },\n    },\n  });\n\nconst Theme = ({ children }: ThemeComponentProps) => {\n  const darkmode = useAppSelector(selectIsDarkMode);\n  return (\n    <ThemeProvider theme={theme({ useDarkMode: darkmode })}>\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default Theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./redux/app/store\";\nimport { Provider } from \"react-redux\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport \"@fontsource/roboto\";\nimport Theme from \"./Theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Theme>\n        <CssBaseline />\n        <App />\n      </Theme>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}